group: radsum
task: problem-list-sum
dataset_path: medarc/problem_list_summarization
dataset_name: null
output_type: greedy_until
training_split: train
validation_split: validation
test_split: test
doc_to_text: "Summarize this Electronic Health Record Progress Note into Active Diagnoses and Problems (at most 10, comma separated). Progress Note: {{inputs}} Active Diagnoses and Problems:"
doc_to_target: "{{target}}"
#need to put somewhere
#  def process_target(self, target):
#        return ",".join(ast.literal_eval(target))
metric_list:
  - metric: !function metrics.rougeL
    aggregation: !function metrics.AggRougeL
    higher_is_better: true
  - metric: !function metrics.rouge1
    aggregation: !function metrics.AggRouge1
    higher_is_better: true
  - metric: !function metrics.rouge2
    aggregation: !function metrics.AggRouge2
    higher_is_better: true
  - metric: !function metrics.RadGraphF1
    aggregation: !function metrics.AggF1RadGraph
    higher_is_better: true